<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.kiji.modeling</groupId>
  <artifactId>kiji-modeling-root</artifactId>
  <version>0.6.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <inceptionYear>2013</inceptionYear>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <parent>
    <groupId>org.kiji.pom</groupId>
    <artifactId>root-pom</artifactId>
    <version>1.1.4</version>
  </parent>

  <modules>
    <module>kiji-modeling</module>
    <module>kiji-modeling-examples</module>
  </modules>

  <properties>
    <!-- Kiji versions -->
    <kiji-express.version>1.0.0</kiji-express.version>
    <kiji-mapreduce.version>1.2.2</kiji-mapreduce.version>
    <kiji-schema.version>1.3.6</kiji-schema.version>
    <kiji-schema-shell.version>1.3.1</kiji-schema-shell.version>

    <!-- Dependency versions -->
    <algebird-core.version>0.1.13</algebird-core.version>
    <cascading.version>2.1.6</cascading.version>
    <hadoop-common.version>2.0.0-cdh4.3.0</hadoop-common.version>
    <scalding.version>0.8.8</scalding.version>
    <twitter-util.version>6.5.0</twitter-util.version>

    <!-- Test dependency versions -->
    <scalatest.version>2.0.M5b</scalatest.version>
  </properties>

  <dependencyManagement>
    <dependencies>
    <!--
      Dependencies, alphabetized by groupId:artifactId:type:version
    -->
      <dependency>
        <groupId>com.twitter</groupId>
        <artifactId>scalding-core_${scala.version}</artifactId>
        <version>${scalding.version}</version>
        <scope>compile</scope>
        <exclusions>
          <exclusion>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.twitter</groupId>
        <artifactId>algebird-core_2.9.2</artifactId>
        <version>${algebird-core.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>com.twitter</groupId>
        <artifactId>scalding-args_${scala.version}</artifactId>
        <version>${scalding.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.kiji.mapreduce</groupId>
        <artifactId>kiji-mapreduce</artifactId>
        <version>${kiji-mapreduce.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.kiji.schema</groupId>
        <artifactId>kiji-schema</artifactId>
        <version>${kiji-schema.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.kiji.express</groupId>
        <artifactId>kiji-express</artifactId>
        <version>${kiji-express.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.kiji.express</groupId>
        <artifactId>kiji-express-tools</artifactId>
        <version>${kiji-express.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.kiji.schema-shell</groupId>
        <artifactId>kiji-schema-shell</artifactId>
        <version>${kiji-schema-shell.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-common</artifactId>
        <version>${hadoop-common.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>cascading</groupId>
        <artifactId>cascading-core</artifactId>
        <version>${cascading.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.kiji.schema-shell</groupId>
        <artifactId>kiji-schema-shell</artifactId>
        <version>${kiji-schema-shell.version}</version>
        <scope>test</scope>
        <type>test-jar</type>
      </dependency>
      <dependency>
        <groupId>org.kiji.schema</groupId>
        <artifactId>kiji-schema</artifactId>
        <version>${kiji-schema.version}</version>
        <type>test-jar</type>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.kiji.express</groupId>
        <artifactId>kiji-express</artifactId>
        <version>${kiji-express.version}</version>
        <type>test-jar</type>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest_${scala.version}</artifactId>
        <version>${scalatest.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <!--
              Modeling depends on the oldest version of KijiSchema, KIJIMR, and KijiExpress that
              support it.
              To test whether the latest Kiji dependency SNAPSHOTs have introduced a regression:

              Run the following commands in your shell

              mvn versions:update-properties -N # Update the kiji-*.version properties
                                                # in the top-level pom file; don't recurse.
              mvn clean verify                  # Uses the new snapshot versions
              mvn versions:revert               # Revert the pom file to before update-properties.
                                      # Do not check in new Kiji SNAPSHOT dependencies in the pom.
          -->
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <configuration>
            <includeProperties>kiji-schema.version,kiji-mapreduce.version,kiji-express.version</includeProperties>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.kiji.schema</groupId>
              <artifactId>kiji-schema</artifactId>
              <version>${kiji-schema.version}</version>
            </dependency>
            <dependency>
              <groupId>org.kiji.mapreduce</groupId>
              <artifactId>kiji-mapreduce</artifactId>
              <version>${kiji-mapreduce.version}</version>
            </dependency>
            <dependency>
              <groupId>org.kiji.express</groupId>
              <artifactId>kiji-express</artifactId>
              <version>${kiji-express.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
        </plugin>
        <plugin>
          <groupId>org.apache.avro</groupId>
          <artifactId>avro-maven-plugin</artifactId>
          <configuration>
            <!-- Avro string compiled to java.lang.String instead of CharSequence -->
            <stringType>String</stringType>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.google.code.maven-replacer-plugin</groupId>
          <artifactId>maven-replacer-plugin</artifactId>
        </plugin>
        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>3.1.3</version>
          <executions>
            <execution>
              <id>compilation</id>
              <goals>
                <goal>compile</goal>
                <goal>testCompile</goal>
              </goals>
              <configuration>
                <args>
                  <arg>-unchecked</arg>
                  <arg>-deprecation</arg>
                  <arg>-explaintypes</arg>
                </args>
                <sendJavaToScalac>false</sendJavaToScalac>
                <jvmArgs>
                  <jvmArg>-Xmx2048m</jvmArg>
                </jvmArgs>
              </configuration>
            </execution>
            <execution>
              <id>scaladocs</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>doc</goal>
              </goals>
              <configuration>
                <outputDirectory>${project.build.directory}/apidocs</outputDirectory>
                <reportOutputDirectory>${project.build.directory}/apidocs</reportOutputDirectory>
                <jvmArgs>
                  <jvmArg>-Xmx2048m</jvmArg>
                </jvmArgs>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.scalastyle</groupId>
          <artifactId>scalastyle-maven-plugin</artifactId>
          <version>0.3.2</version>
          <configuration>
            <failOnViolation>true</failOnViolation>
            <includeTestSourceDirectory>true</includeTestSourceDirectory>
            <failOnWarning>false</failOnWarning>
            <sourceDirectory>${basedir}/src/main/scala</sourceDirectory>
            <testSourceDirectory>${basedir}/src/test/scala</testSourceDirectory>
            <configLocation>${basedir}/src/main/scalastyle/scalastyle_config.xml</configLocation>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- ScalaTest -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <argLine>-Xmx2G -XX:MaxPermSize=512m</argLine>
            <includes>
              <include>**/*Suite.scala</include>
              <include>%regex[.*/.*Suite.class]</include>
            </includes>
            <forkMode>once</forkMode>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <repositories>
    <!-- Kiji repositories -->
    <repository>
      <id>kiji-repos</id>
      <name>kiji-repos</name>
      <url>https://repo.wibidata.com/artifactory/kiji</url>
    </repository>
    <repository>
      <id>kiji-nightly</id>
      <name>kiji-nightly</name>
      <url>https://repo.wibidata.com/artifactory/kiji-nightly</url>
    </repository>

    <!-- ScalaTest -->
    <repository>
      <id>Sonatype OSS Repository</id>
      <url>https://oss.sonatype.org/content/groups/public</url>
    </repository>

    <!-- Cascading -->
    <repository>
      <id>conjars.org</id>
      <url>http://conjars.org/repo</url>
    </repository>
  </repositories>

  <scm>
    <connection>scm:git:git@github.com:kijiproject/kiji-modeling.git</connection>
    <url>scm:git:git@github.com:kijiproject/kiji-modeling.git</url>
    <developerConnection>scm:git:git@github.com:kijiproject/kiji-modeling.git</developerConnection>
  </scm>
</project>
